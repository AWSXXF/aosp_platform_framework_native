// Copyright (C) 2010 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

cc_library_shared {

    clang: true,
    cppflags: [
        "-std=c++1y",
        "-Weverything",
        "-Werror",

        // The static constructors and destructors in this library have not
        // been noted to introduce significant overheads
        "-Wno-exit-time-destructors",
        "-Wno-global-constructors",

        // We only care about compiling as C++14
        "-Wno-c++98-compat-pedantic",

        // We use four-character constants for the GraphicBuffer header, and
        // don't care that they're non-portable as long as they're consistent
        // within one execution
        "-Wno-four-char-constants",

        // Don't warn about struct padding
        "-Wno-padded",
    ],

    srcs: [
        "Fence.cpp",
        "FramebufferNativeWindow.cpp",
        "FrameStats.cpp",
        "GraphicBuffer.cpp",
        "GraphicBufferAllocator.cpp",
        "GraphicBufferMapper.cpp",
        "PixelFormat.cpp",
        "Rect.cpp",
        "Region.cpp",
        "UiConfig.cpp",
    ],

    shared_libs: [
        "libcutils",
        "libhardware",
        "libsync",
        "libutils",
        "liblog",
    ],

    // ANDROIDMK TRANSLATION ERROR: unsupported conditional
    // ifneq ($(BOARD_FRAMEBUFFER_FORCE_FORMAT),)
    //cflags: ["-DFRAMEBUFFER_FORCE_FORMAT=" + BOARD_FRAMEBUFFER_FORCE_FORMAT],
    // ANDROIDMK TRANSLATION ERROR: endif from unsupported contitional
    // endif
    name: "libui",

}

// Include subdirectory makefiles
// ============================================================
subdirs = ["tests"]

// If we're building with ONE_SHOT_MAKEFILE (mm, mmm), then what the framework
// team really wants is to build the stuff defined by this makefile.
// ANDROIDMK TRANSLATION ERROR: unsupported conditional
// ifeq (,$(ONE_SHOT_MAKEFILE))
// ANDROIDMK TRANSLATION ERROR: unsupported include
// include $(call first-makefiles-under,$(LOCAL_PATH))
// ANDROIDMK TRANSLATION ERROR: endif from unsupported contitional
// endif
